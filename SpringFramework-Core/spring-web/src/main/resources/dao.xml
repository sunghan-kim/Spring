<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/> <!-- annotation 방식으로 spring 설정 가능 -->

    <bean id="connectionFactory" class="kr.co.test.cli.ConnectionFactory">
        <constructor-arg name="driverClass" value="org.h2.Driver" />
        <constructor-arg name="url" value="jdbc:h2:mem:test" />
        <constructor-arg name="user" value="sa" />
        <constructor-arg name="password" value="" />
    </bean>

    <!-- Connection 객체 의존성 주입 -->
    <bean id="connection" class="java.sql.Connection"
          factory-bean="connectionFactory"
          factory-method="createConnection" />

    <bean id="dao" class="kr.co.test.cli.Dao">
        <constructor-arg ref="connection"/>
    </bean>

    <bean id="dao2" class="kr.co.test.cli.Dao2">
        <constructor-arg ref="connection"/>
    </bean>

    <!-- ApplicationContextAware 인터페이스를 구현한 A 클래스 bean 등록 -->
    <bean class="kr.co.test.cli.aware.A" />
    <!--
    <bean class="kr.co.test.cli.annotation.B">
        <qualifier value="b1" />
    </bean>
    <bean class="kr.co.test.cli.annotation.B">
        <qualifier value="b2" />
    </bean>
    -->
    <bean class="kr.co.test.cli.annotation.AppConfig" /> <!-- @ComponentScan annotation을 인식시키기 위해 Appconfig는 XML에 bean 설정이 되있어야 한다. -->

</beans>